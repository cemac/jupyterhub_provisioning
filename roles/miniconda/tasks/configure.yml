---

# Add mamba:
- name: 'miniconda configure mamba'
  become_user: "{{ miniconda_install.user }}"
  command: "{{ miniconda_install.path }}/bin/conda install -y mamba"
  args:
    creates: "{{ miniconda_install.path }}/bin/mamba"
  when: miniconda_install.use_mamba is defined and
        miniconda_install.use_mamba
  tags:
    - 'miniconda_configure_mamba'

# Add conda packages:
- name: 'miniconda configure conda packages'
  become_user: "{{ miniconda_install.user }}"
  command: "{{ miniconda_install.path }}/bin/conda install -y {{ miniconda_install.packages | join(' ') }}"
  when: miniconda_install.packages is defined and
        (miniconda_install.use_mamba is not defined or
         not miniconda_install.use_mamba)
  tags:
    - 'miniconda_configure_packages'
    - 'miniconda_configure_conda_packages'

# Add mamba packages:
- name: 'miniconda configure mamba packages'
  become_user: "{{ miniconda_install.user }}"
  command: "{{ miniconda_install.path }}/bin/mamba install -y {{ miniconda_install.packages | join(' ') }}"
  when: miniconda_install.packages is defined and
        miniconda_install.use_mamba is defined and
        miniconda_install.use_mamba
  tags:
    - 'miniconda_configure_packages'
    - 'miniconda_configure_mamba_packages'

# Add pip packages:
- name: 'miniconda configure pip packages'
  become_user: "{{ miniconda_install.user }}"
  pip:
    name: "{{ miniconda_install.pip_packages }}"
    executable: "{{ miniconda_install.path }}/bin/pip"
  when: miniconda_install.pip_packages is defined
  tags:
    - 'miniconda_configure_packages'
    - 'miniconda_configure_pip_packages'

# Update miniconda with conda:
- name: 'miniconda configure conda update'
  become_user: "{{ miniconda_install.user }}"
  command: "{{ miniconda_install.path }}/bin/conda update -y --all"
  when: miniconda_install.updates is defined and
        miniconda_install.updates and
        (miniconda_install.use_mamba is not defined or
         not miniconda_install.use_mamba)
  tags:
    - 'miniconda_configure_update'
    - 'miniconda_configure_conda_update'

# Update miniconda with mamba:
- name: 'miniconda configure mamba update'
  become_user: "{{ miniconda_install.user }}"
  command: "{{ miniconda_install.path }}/bin/mamba update -y --all"
  when: miniconda_install.updates is defined and
        miniconda_install.updates and
        miniconda_install.use_mamba is defined and
        miniconda_install.use_mamba
  tags:
    - 'miniconda_configure_update'
    - 'miniconda_configure_mamba_update'

# Update pip packages:
- name: 'miniconda configure pip update'
  become_user: "{{ miniconda_install.user }}"
  pip:
    name: "{{ miniconda_install.pip_packages }}"
    executable: "{{ miniconda_install.path }}/bin/pip"
    extra_args: '-U' 
  when: miniconda_install.pip_packages is defined and
        miniconda_install.updates
  tags:
    - 'miniconda_configure_update'
    - 'miniconda_configure_pip_update'

# Wrap miniconda:
- name: 'miniconda configure wrapper directory'
  file:
    path: "{{ miniconda_install.wrapper_dir }}"
    state: 'directory'
    owner: "{{ miniconda_install.user }}"
  when: miniconda_install.wrap is defined and
        miniconda_install.wrap
  tags:
    - 'miniconda_wrap'
    - 'miniconda_configure_wrapper_directory'
- name: 'miniconda configure wrapper'
  template:
    src: 'wrapper.j2'
    dest: "{{ miniconda_install.wrapper_dir }}/__wrapper"
    owner: "{{ miniconda_install.user }}"
    mode: '0755'
  when: miniconda_install.wrap is defined and
        miniconda_install.wrap
  tags:
    - 'miniconda_wrap'
    - 'miniconda_configure_wrapper'
- name: 'miniconda configure wrap executables'
  file:
    path: "{{ miniconda_install.wrapper_dir }}/{{ item }}"
    src: "{{ miniconda_install.wrapper_dir }}/__wrapper"
    state: 'link'
  loop: "{{ miniconda_install.wrap_executables | default(miniconda_wrap_executables) }}"
  when: miniconda_install.wrap is defined and
        miniconda_install.wrap
  tags:
    - 'miniconda_wrap'
    - 'miniconda_configure_wrap_executables'
